// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package server

import (
	"context"
	"time"

	"github.com/Khan/genqlient/graphql"
)

type ArtifactAliasInput struct {
	ArtifactCollectionName string `json:"artifactCollectionName"`
	Alias                  string `json:"alias"`
}

// GetArtifactCollectionName returns ArtifactAliasInput.ArtifactCollectionName, and is useful for accessing the field via an interface.
func (v *ArtifactAliasInput) GetArtifactCollectionName() string { return v.ArtifactCollectionName }

// GetAlias returns ArtifactAliasInput.Alias, and is useful for accessing the field via an interface.
func (v *ArtifactAliasInput) GetAlias() string { return v.Alias }

type ArtifactManifestType string

const (
	ArtifactManifestTypeFull        ArtifactManifestType = "FULL"
	ArtifactManifestTypePatch       ArtifactManifestType = "PATCH"
	ArtifactManifestTypeIncremental ArtifactManifestType = "INCREMENTAL"
)

type ArtifactState string

const (
	ArtifactStatePending   ArtifactState = "PENDING"
	ArtifactStateCommitted ArtifactState = "COMMITTED"
	ArtifactStateDeleted   ArtifactState = "DELETED"
)

type ArtifactStorageLayout string

const (
	ArtifactStorageLayoutV1 ArtifactStorageLayout = "V1"
	ArtifactStorageLayoutV2 ArtifactStorageLayout = "V2"
)

// CommitArtifactCommitArtifactCommitArtifactPayload includes the requested fields of the GraphQL type CommitArtifactPayload.
type CommitArtifactCommitArtifactCommitArtifactPayload struct {
	Artifact CommitArtifactCommitArtifactCommitArtifactPayloadArtifact `json:"artifact"`
}

// GetArtifact returns CommitArtifactCommitArtifactCommitArtifactPayload.Artifact, and is useful for accessing the field via an interface.
func (v *CommitArtifactCommitArtifactCommitArtifactPayload) GetArtifact() CommitArtifactCommitArtifactCommitArtifactPayloadArtifact {
	return v.Artifact
}

// CommitArtifactCommitArtifactCommitArtifactPayloadArtifact includes the requested fields of the GraphQL type Artifact.
type CommitArtifactCommitArtifactCommitArtifactPayloadArtifact struct {
	Id     string `json:"id"`
	Digest string `json:"digest"`
}

// GetId returns CommitArtifactCommitArtifactCommitArtifactPayloadArtifact.Id, and is useful for accessing the field via an interface.
func (v *CommitArtifactCommitArtifactCommitArtifactPayloadArtifact) GetId() string { return v.Id }

// GetDigest returns CommitArtifactCommitArtifactCommitArtifactPayloadArtifact.Digest, and is useful for accessing the field via an interface.
func (v *CommitArtifactCommitArtifactCommitArtifactPayloadArtifact) GetDigest() string {
	return v.Digest
}

// CommitArtifactResponse is returned by CommitArtifact on success.
type CommitArtifactResponse struct {
	CommitArtifact *CommitArtifactCommitArtifactCommitArtifactPayload `json:"commitArtifact"`
}

// GetCommitArtifact returns CommitArtifactResponse.CommitArtifact, and is useful for accessing the field via an interface.
func (v *CommitArtifactResponse) GetCommitArtifact() *CommitArtifactCommitArtifactCommitArtifactPayload {
	return v.CommitArtifact
}

// CreateArtifactCreateArtifactCreateArtifactPayload includes the requested fields of the GraphQL type CreateArtifactPayload.
type CreateArtifactCreateArtifactCreateArtifactPayload struct {
	Artifact CreateArtifactCreateArtifactCreateArtifactPayloadArtifact `json:"artifact"`
}

// GetArtifact returns CreateArtifactCreateArtifactCreateArtifactPayload.Artifact, and is useful for accessing the field via an interface.
func (v *CreateArtifactCreateArtifactCreateArtifactPayload) GetArtifact() CreateArtifactCreateArtifactCreateArtifactPayloadArtifact {
	return v.Artifact
}

// CreateArtifactCreateArtifactCreateArtifactPayloadArtifact includes the requested fields of the GraphQL type Artifact.
type CreateArtifactCreateArtifactCreateArtifactPayloadArtifact struct {
	Id               string                                                                          `json:"id"`
	Digest           string                                                                          `json:"digest"`
	State            ArtifactState                                                                   `json:"state"`
	Aliases          []CreateArtifactCreateArtifactCreateArtifactPayloadArtifactAliasesArtifactAlias `json:"aliases"`
	ArtifactSequence CreateArtifactCreateArtifactCreateArtifactPayloadArtifactArtifactSequence       `json:"artifactSequence"`
}

// GetId returns CreateArtifactCreateArtifactCreateArtifactPayloadArtifact.Id, and is useful for accessing the field via an interface.
func (v *CreateArtifactCreateArtifactCreateArtifactPayloadArtifact) GetId() string { return v.Id }

// GetDigest returns CreateArtifactCreateArtifactCreateArtifactPayloadArtifact.Digest, and is useful for accessing the field via an interface.
func (v *CreateArtifactCreateArtifactCreateArtifactPayloadArtifact) GetDigest() string {
	return v.Digest
}

// GetState returns CreateArtifactCreateArtifactCreateArtifactPayloadArtifact.State, and is useful for accessing the field via an interface.
func (v *CreateArtifactCreateArtifactCreateArtifactPayloadArtifact) GetState() ArtifactState {
	return v.State
}

// GetAliases returns CreateArtifactCreateArtifactCreateArtifactPayloadArtifact.Aliases, and is useful for accessing the field via an interface.
func (v *CreateArtifactCreateArtifactCreateArtifactPayloadArtifact) GetAliases() []CreateArtifactCreateArtifactCreateArtifactPayloadArtifactAliasesArtifactAlias {
	return v.Aliases
}

// GetArtifactSequence returns CreateArtifactCreateArtifactCreateArtifactPayloadArtifact.ArtifactSequence, and is useful for accessing the field via an interface.
func (v *CreateArtifactCreateArtifactCreateArtifactPayloadArtifact) GetArtifactSequence() CreateArtifactCreateArtifactCreateArtifactPayloadArtifactArtifactSequence {
	return v.ArtifactSequence
}

// CreateArtifactCreateArtifactCreateArtifactPayloadArtifactAliasesArtifactAlias includes the requested fields of the GraphQL type ArtifactAlias.
type CreateArtifactCreateArtifactCreateArtifactPayloadArtifactAliasesArtifactAlias struct {
	ArtifactCollectionName string `json:"artifactCollectionName"`
	Alias                  string `json:"alias"`
}

// GetArtifactCollectionName returns CreateArtifactCreateArtifactCreateArtifactPayloadArtifactAliasesArtifactAlias.ArtifactCollectionName, and is useful for accessing the field via an interface.
func (v *CreateArtifactCreateArtifactCreateArtifactPayloadArtifactAliasesArtifactAlias) GetArtifactCollectionName() string {
	return v.ArtifactCollectionName
}

// GetAlias returns CreateArtifactCreateArtifactCreateArtifactPayloadArtifactAliasesArtifactAlias.Alias, and is useful for accessing the field via an interface.
func (v *CreateArtifactCreateArtifactCreateArtifactPayloadArtifactAliasesArtifactAlias) GetAlias() string {
	return v.Alias
}

// CreateArtifactCreateArtifactCreateArtifactPayloadArtifactArtifactSequence includes the requested fields of the GraphQL type ArtifactSequence.
type CreateArtifactCreateArtifactCreateArtifactPayloadArtifactArtifactSequence struct {
	Id             string                                                                                   `json:"id"`
	LatestArtifact *CreateArtifactCreateArtifactCreateArtifactPayloadArtifactArtifactSequenceLatestArtifact `json:"latestArtifact"`
}

// GetId returns CreateArtifactCreateArtifactCreateArtifactPayloadArtifactArtifactSequence.Id, and is useful for accessing the field via an interface.
func (v *CreateArtifactCreateArtifactCreateArtifactPayloadArtifactArtifactSequence) GetId() string {
	return v.Id
}

// GetLatestArtifact returns CreateArtifactCreateArtifactCreateArtifactPayloadArtifactArtifactSequence.LatestArtifact, and is useful for accessing the field via an interface.
func (v *CreateArtifactCreateArtifactCreateArtifactPayloadArtifactArtifactSequence) GetLatestArtifact() *CreateArtifactCreateArtifactCreateArtifactPayloadArtifactArtifactSequenceLatestArtifact {
	return v.LatestArtifact
}

// CreateArtifactCreateArtifactCreateArtifactPayloadArtifactArtifactSequenceLatestArtifact includes the requested fields of the GraphQL type Artifact.
type CreateArtifactCreateArtifactCreateArtifactPayloadArtifactArtifactSequenceLatestArtifact struct {
	Id           string `json:"id"`
	VersionIndex *int   `json:"versionIndex"`
}

// GetId returns CreateArtifactCreateArtifactCreateArtifactPayloadArtifactArtifactSequenceLatestArtifact.Id, and is useful for accessing the field via an interface.
func (v *CreateArtifactCreateArtifactCreateArtifactPayloadArtifactArtifactSequenceLatestArtifact) GetId() string {
	return v.Id
}

// GetVersionIndex returns CreateArtifactCreateArtifactCreateArtifactPayloadArtifactArtifactSequenceLatestArtifact.VersionIndex, and is useful for accessing the field via an interface.
func (v *CreateArtifactCreateArtifactCreateArtifactPayloadArtifactArtifactSequenceLatestArtifact) GetVersionIndex() *int {
	return v.VersionIndex
}

type CreateArtifactFileSpecInput struct {
	ArtifactID         string  `json:"artifactID"`
	Name               string  `json:"name"`
	Md5                string  `json:"md5"`
	Mimetype           *string `json:"mimetype"`
	ArtifactManifestID *string `json:"artifactManifestID"`
}

// GetArtifactID returns CreateArtifactFileSpecInput.ArtifactID, and is useful for accessing the field via an interface.
func (v *CreateArtifactFileSpecInput) GetArtifactID() string { return v.ArtifactID }

// GetName returns CreateArtifactFileSpecInput.Name, and is useful for accessing the field via an interface.
func (v *CreateArtifactFileSpecInput) GetName() string { return v.Name }

// GetMd5 returns CreateArtifactFileSpecInput.Md5, and is useful for accessing the field via an interface.
func (v *CreateArtifactFileSpecInput) GetMd5() string { return v.Md5 }

// GetMimetype returns CreateArtifactFileSpecInput.Mimetype, and is useful for accessing the field via an interface.
func (v *CreateArtifactFileSpecInput) GetMimetype() *string { return v.Mimetype }

// GetArtifactManifestID returns CreateArtifactFileSpecInput.ArtifactManifestID, and is useful for accessing the field via an interface.
func (v *CreateArtifactFileSpecInput) GetArtifactManifestID() *string { return v.ArtifactManifestID }

// CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayload includes the requested fields of the GraphQL type CreateArtifactFilesPayload.
type CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayload struct {
	Files CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnection `json:"files"`
}

// GetFiles returns CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayload.Files, and is useful for accessing the field via an interface.
func (v *CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayload) GetFiles() CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnection {
	return v.Files
}

// CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnection includes the requested fields of the GraphQL type FileConnection.
type CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnection struct {
	Edges []CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdge `json:"edges"`
}

// GetEdges returns CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnection.Edges, and is useful for accessing the field via an interface.
func (v *CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnection) GetEdges() []CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdge {
	return v.Edges
}

// CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdge includes the requested fields of the GraphQL type FileEdge.
type CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdge struct {
	Node *CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFile `json:"node"`
}

// GetNode returns CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdge.Node, and is useful for accessing the field via an interface.
func (v *CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdge) GetNode() *CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFile {
	return v.Node
}

// CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFile includes the requested fields of the GraphQL type File.
type CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFile struct {
	Id            string                                                                                                            `json:"id"`
	Name          string                                                                                                            `json:"name"`
	DisplayName   string                                                                                                            `json:"displayName"`
	UploadUrl     *string                                                                                                           `json:"uploadUrl"`
	UploadHeaders []string                                                                                                          `json:"uploadHeaders"`
	Artifact      *CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFileArtifact `json:"artifact"`
}

// GetId returns CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFile.Id, and is useful for accessing the field via an interface.
func (v *CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFile) GetId() string {
	return v.Id
}

// GetName returns CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFile.Name, and is useful for accessing the field via an interface.
func (v *CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFile) GetName() string {
	return v.Name
}

// GetDisplayName returns CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFile.DisplayName, and is useful for accessing the field via an interface.
func (v *CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFile) GetDisplayName() string {
	return v.DisplayName
}

// GetUploadUrl returns CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFile.UploadUrl, and is useful for accessing the field via an interface.
func (v *CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFile) GetUploadUrl() *string {
	return v.UploadUrl
}

// GetUploadHeaders returns CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFile.UploadHeaders, and is useful for accessing the field via an interface.
func (v *CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFile) GetUploadHeaders() []string {
	return v.UploadHeaders
}

// GetArtifact returns CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFile.Artifact, and is useful for accessing the field via an interface.
func (v *CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFile) GetArtifact() *CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFileArtifact {
	return v.Artifact
}

// CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFileArtifact includes the requested fields of the GraphQL type Artifact.
type CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFileArtifact struct {
	Id string `json:"id"`
}

// GetId returns CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFileArtifact.Id, and is useful for accessing the field via an interface.
func (v *CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayloadFilesFileConnectionEdgesFileEdgeNodeFileArtifact) GetId() string {
	return v.Id
}

// CreateArtifactFilesResponse is returned by CreateArtifactFiles on success.
type CreateArtifactFilesResponse struct {
	CreateArtifactFiles *CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayload `json:"createArtifactFiles"`
}

// GetCreateArtifactFiles returns CreateArtifactFilesResponse.CreateArtifactFiles, and is useful for accessing the field via an interface.
func (v *CreateArtifactFilesResponse) GetCreateArtifactFiles() *CreateArtifactFilesCreateArtifactFilesCreateArtifactFilesPayload {
	return v.CreateArtifactFiles
}

// CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayload includes the requested fields of the GraphQL type CreateArtifactManifestPayload.
type CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayload struct {
	ArtifactManifest CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifest `json:"artifactManifest"`
}

// GetArtifactManifest returns CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayload.ArtifactManifest, and is useful for accessing the field via an interface.
func (v *CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayload) GetArtifactManifest() CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifest {
	return v.ArtifactManifest
}

// CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifest includes the requested fields of the GraphQL type ArtifactManifest.
type CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifest struct {
	Id   string                                                                                        `json:"id"`
	File CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifestFile `json:"file"`
}

// GetId returns CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifest.Id, and is useful for accessing the field via an interface.
func (v *CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifest) GetId() string {
	return v.Id
}

// GetFile returns CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifest.File, and is useful for accessing the field via an interface.
func (v *CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifest) GetFile() CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifestFile {
	return v.File
}

// CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifestFile includes the requested fields of the GraphQL type File.
type CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifestFile struct {
	Id            string   `json:"id"`
	Name          string   `json:"name"`
	DisplayName   string   `json:"displayName"`
	UploadUrl     *string  `json:"uploadUrl"`
	UploadHeaders []string `json:"uploadHeaders"`
}

// GetId returns CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifestFile.Id, and is useful for accessing the field via an interface.
func (v *CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifestFile) GetId() string {
	return v.Id
}

// GetName returns CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifestFile.Name, and is useful for accessing the field via an interface.
func (v *CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifestFile) GetName() string {
	return v.Name
}

// GetDisplayName returns CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifestFile.DisplayName, and is useful for accessing the field via an interface.
func (v *CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifestFile) GetDisplayName() string {
	return v.DisplayName
}

// GetUploadUrl returns CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifestFile.UploadUrl, and is useful for accessing the field via an interface.
func (v *CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifestFile) GetUploadUrl() *string {
	return v.UploadUrl
}

// GetUploadHeaders returns CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifestFile.UploadHeaders, and is useful for accessing the field via an interface.
func (v *CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayloadArtifactManifestFile) GetUploadHeaders() []string {
	return v.UploadHeaders
}

// CreateArtifactManifestResponse is returned by CreateArtifactManifest on success.
type CreateArtifactManifestResponse struct {
	CreateArtifactManifest *CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayload `json:"createArtifactManifest"`
}

// GetCreateArtifactManifest returns CreateArtifactManifestResponse.CreateArtifactManifest, and is useful for accessing the field via an interface.
func (v *CreateArtifactManifestResponse) GetCreateArtifactManifest() *CreateArtifactManifestCreateArtifactManifestCreateArtifactManifestPayload {
	return v.CreateArtifactManifest
}

// CreateArtifactResponse is returned by CreateArtifact on success.
type CreateArtifactResponse struct {
	CreateArtifact *CreateArtifactCreateArtifactCreateArtifactPayload `json:"createArtifact"`
}

// GetCreateArtifact returns CreateArtifactResponse.CreateArtifact, and is useful for accessing the field via an interface.
func (v *CreateArtifactResponse) GetCreateArtifact() *CreateArtifactCreateArtifactCreateArtifactPayload {
	return v.CreateArtifact
}

// RunUploadUrlsModelProject includes the requested fields of the GraphQL type Project.
type RunUploadUrlsModelProject struct {
	Bucket *RunUploadUrlsModelProjectBucketRun `json:"bucket"`
}

// GetBucket returns RunUploadUrlsModelProject.Bucket, and is useful for accessing the field via an interface.
func (v *RunUploadUrlsModelProject) GetBucket() *RunUploadUrlsModelProjectBucketRun { return v.Bucket }

// RunUploadUrlsModelProjectBucketRun includes the requested fields of the GraphQL type Run.
type RunUploadUrlsModelProjectBucketRun struct {
	Id    string                                                 `json:"id"`
	Files *RunUploadUrlsModelProjectBucketRunFilesFileConnection `json:"files"`
}

// GetId returns RunUploadUrlsModelProjectBucketRun.Id, and is useful for accessing the field via an interface.
func (v *RunUploadUrlsModelProjectBucketRun) GetId() string { return v.Id }

// GetFiles returns RunUploadUrlsModelProjectBucketRun.Files, and is useful for accessing the field via an interface.
func (v *RunUploadUrlsModelProjectBucketRun) GetFiles() *RunUploadUrlsModelProjectBucketRunFilesFileConnection {
	return v.Files
}

// RunUploadUrlsModelProjectBucketRunFilesFileConnection includes the requested fields of the GraphQL type FileConnection.
type RunUploadUrlsModelProjectBucketRunFilesFileConnection struct {
	UploadHeaders []string                                                             `json:"uploadHeaders"`
	Edges         []RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdge `json:"edges"`
}

// GetUploadHeaders returns RunUploadUrlsModelProjectBucketRunFilesFileConnection.UploadHeaders, and is useful for accessing the field via an interface.
func (v *RunUploadUrlsModelProjectBucketRunFilesFileConnection) GetUploadHeaders() []string {
	return v.UploadHeaders
}

// GetEdges returns RunUploadUrlsModelProjectBucketRunFilesFileConnection.Edges, and is useful for accessing the field via an interface.
func (v *RunUploadUrlsModelProjectBucketRunFilesFileConnection) GetEdges() []RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdge {
	return v.Edges
}

// RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdge includes the requested fields of the GraphQL type FileEdge.
type RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdge struct {
	Node *RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdgeNodeFile `json:"node"`
}

// GetNode returns RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdge.Node, and is useful for accessing the field via an interface.
func (v *RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdge) GetNode() *RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdgeNodeFile {
	return v.Node
}

// RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdgeNodeFile includes the requested fields of the GraphQL type File.
type RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdgeNodeFile struct {
	Name      string     `json:"name"`
	Url       *string    `json:"url"`
	UpdatedAt *time.Time `json:"updatedAt"`
}

// GetName returns RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdgeNodeFile.Name, and is useful for accessing the field via an interface.
func (v *RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdgeNodeFile) GetName() string {
	return v.Name
}

// GetUrl returns RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdgeNodeFile.Url, and is useful for accessing the field via an interface.
func (v *RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdgeNodeFile) GetUrl() *string {
	return v.Url
}

// GetUpdatedAt returns RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdgeNodeFile.UpdatedAt, and is useful for accessing the field via an interface.
func (v *RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdgeNodeFile) GetUpdatedAt() *time.Time {
	return v.UpdatedAt
}

// RunUploadUrlsResponse is returned by RunUploadUrls on success.
type RunUploadUrlsResponse struct {
	Model *RunUploadUrlsModelProject `json:"model"`
}

// GetModel returns RunUploadUrlsResponse.Model, and is useful for accessing the field via an interface.
func (v *RunUploadUrlsResponse) GetModel() *RunUploadUrlsModelProject { return v.Model }

// UpsertBucketResponse is returned by UpsertBucket on success.
type UpsertBucketResponse struct {
	UpsertBucket *UpsertBucketUpsertBucketUpsertBucketPayload `json:"upsertBucket"`
}

// GetUpsertBucket returns UpsertBucketResponse.UpsertBucket, and is useful for accessing the field via an interface.
func (v *UpsertBucketResponse) GetUpsertBucket() *UpsertBucketUpsertBucketUpsertBucketPayload {
	return v.UpsertBucket
}

// UpsertBucketUpsertBucketUpsertBucketPayload includes the requested fields of the GraphQL type UpsertBucketPayload.
type UpsertBucketUpsertBucketUpsertBucketPayload struct {
	Bucket   *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun `json:"bucket"`
	Inserted *bool                                                 `json:"inserted"`
}

// GetBucket returns UpsertBucketUpsertBucketUpsertBucketPayload.Bucket, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayload) GetBucket() *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun {
	return v.Bucket
}

// GetInserted returns UpsertBucketUpsertBucketUpsertBucketPayload.Inserted, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayload) GetInserted() *bool { return v.Inserted }

// UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun includes the requested fields of the GraphQL type Run.
type UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun struct {
	Id          string                                                       `json:"id"`
	Name        string                                                       `json:"name"`
	DisplayName *string                                                      `json:"displayName"`
	Description *string                                                      `json:"description"`
	Config      *string                                                      `json:"config"`
	SweepName   *string                                                      `json:"sweepName"`
	Project     *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProject `json:"project"`
}

// GetId returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun.Id, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun) GetId() string { return v.Id }

// GetName returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun.Name, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun) GetName() string { return v.Name }

// GetDisplayName returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun.DisplayName, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun) GetDisplayName() *string {
	return v.DisplayName
}

// GetDescription returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun.Description, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun) GetDescription() *string {
	return v.Description
}

// GetConfig returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun.Config, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun) GetConfig() *string { return v.Config }

// GetSweepName returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun.SweepName, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun) GetSweepName() *string {
	return v.SweepName
}

// GetProject returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun.Project, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun) GetProject() *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProject {
	return v.Project
}

// UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProject includes the requested fields of the GraphQL type Project.
type UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProject struct {
	Id     string                                                            `json:"id"`
	Name   string                                                            `json:"name"`
	Entity UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProjectEntity `json:"entity"`
}

// GetId returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProject.Id, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProject) GetId() string { return v.Id }

// GetName returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProject.Name, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProject) GetName() string { return v.Name }

// GetEntity returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProject.Entity, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProject) GetEntity() UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProjectEntity {
	return v.Entity
}

// UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProjectEntity includes the requested fields of the GraphQL type Entity.
type UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProjectEntity struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProjectEntity.Id, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProjectEntity) GetId() string {
	return v.Id
}

// GetName returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProjectEntity.Name, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProjectEntity) GetName() string {
	return v.Name
}

// ViewerResponse is returned by Viewer on success.
type ViewerResponse struct {
	Viewer *ViewerViewerUser `json:"viewer"`
}

// GetViewer returns ViewerResponse.Viewer, and is useful for accessing the field via an interface.
func (v *ViewerResponse) GetViewer() *ViewerViewerUser { return v.Viewer }

// ViewerViewerUser includes the requested fields of the GraphQL type User.
type ViewerViewerUser struct {
	Id     string                                 `json:"id"`
	Entity *string                                `json:"entity"`
	Flags  *string                                `json:"flags"`
	Teams  *ViewerViewerUserTeamsEntityConnection `json:"teams"`
}

// GetId returns ViewerViewerUser.Id, and is useful for accessing the field via an interface.
func (v *ViewerViewerUser) GetId() string { return v.Id }

// GetEntity returns ViewerViewerUser.Entity, and is useful for accessing the field via an interface.
func (v *ViewerViewerUser) GetEntity() *string { return v.Entity }

// GetFlags returns ViewerViewerUser.Flags, and is useful for accessing the field via an interface.
func (v *ViewerViewerUser) GetFlags() *string { return v.Flags }

// GetTeams returns ViewerViewerUser.Teams, and is useful for accessing the field via an interface.
func (v *ViewerViewerUser) GetTeams() *ViewerViewerUserTeamsEntityConnection { return v.Teams }

// ViewerViewerUserTeamsEntityConnection includes the requested fields of the GraphQL type EntityConnection.
type ViewerViewerUserTeamsEntityConnection struct {
	Edges []ViewerViewerUserTeamsEntityConnectionEdgesEntityEdge `json:"edges"`
}

// GetEdges returns ViewerViewerUserTeamsEntityConnection.Edges, and is useful for accessing the field via an interface.
func (v *ViewerViewerUserTeamsEntityConnection) GetEdges() []ViewerViewerUserTeamsEntityConnectionEdgesEntityEdge {
	return v.Edges
}

// ViewerViewerUserTeamsEntityConnectionEdgesEntityEdge includes the requested fields of the GraphQL type EntityEdge.
type ViewerViewerUserTeamsEntityConnectionEdgesEntityEdge struct {
	Node *ViewerViewerUserTeamsEntityConnectionEdgesEntityEdgeNodeEntity `json:"node"`
}

// GetNode returns ViewerViewerUserTeamsEntityConnectionEdgesEntityEdge.Node, and is useful for accessing the field via an interface.
func (v *ViewerViewerUserTeamsEntityConnectionEdgesEntityEdge) GetNode() *ViewerViewerUserTeamsEntityConnectionEdgesEntityEdgeNodeEntity {
	return v.Node
}

// ViewerViewerUserTeamsEntityConnectionEdgesEntityEdgeNodeEntity includes the requested fields of the GraphQL type Entity.
type ViewerViewerUserTeamsEntityConnectionEdgesEntityEdgeNodeEntity struct {
	Name string `json:"name"`
}

// GetName returns ViewerViewerUserTeamsEntityConnectionEdgesEntityEdgeNodeEntity.Name, and is useful for accessing the field via an interface.
func (v *ViewerViewerUserTeamsEntityConnectionEdgesEntityEdgeNodeEntity) GetName() string {
	return v.Name
}

// __CommitArtifactInput is used internally by genqlient
type __CommitArtifactInput struct {
	ArtifactID string `json:"artifactID"`
}

// GetArtifactID returns __CommitArtifactInput.ArtifactID, and is useful for accessing the field via an interface.
func (v *__CommitArtifactInput) GetArtifactID() string { return v.ArtifactID }

// __CreateArtifactFilesInput is used internally by genqlient
type __CreateArtifactFilesInput struct {
	StorageLayout ArtifactStorageLayout         `json:"storageLayout"`
	ArtifactFiles []CreateArtifactFileSpecInput `json:"artifactFiles"`
}

// GetStorageLayout returns __CreateArtifactFilesInput.StorageLayout, and is useful for accessing the field via an interface.
func (v *__CreateArtifactFilesInput) GetStorageLayout() ArtifactStorageLayout { return v.StorageLayout }

// GetArtifactFiles returns __CreateArtifactFilesInput.ArtifactFiles, and is useful for accessing the field via an interface.
func (v *__CreateArtifactFilesInput) GetArtifactFiles() []CreateArtifactFileSpecInput {
	return v.ArtifactFiles
}

// __CreateArtifactInput is used internally by genqlient
type __CreateArtifactInput struct {
	ArtifactTypeName          string               `json:"artifactTypeName"`
	ArtifactCollectionNames   []string             `json:"artifactCollectionNames"`
	EntityName                string               `json:"entityName"`
	ProjectName               string               `json:"projectName"`
	RunName                   *string              `json:"runName"`
	Description               *string              `json:"description"`
	Digest                    string               `json:"digest"`
	Labels                    *string              `json:"labels"`
	Aliases                   []ArtifactAliasInput `json:"aliases"`
	Metadata                  *string              `json:"metadata"`
	HistoryStep               int                  `json:"historyStep"`
	DistributedID             *string              `json:"distributedID"`
	ClientID                  string               `json:"clientID"`
	SequenceClientID          string               `json:"sequenceClientID"`
	EnableDigestDeduplication *bool                `json:"enableDigestDeduplication"`
}

// GetArtifactTypeName returns __CreateArtifactInput.ArtifactTypeName, and is useful for accessing the field via an interface.
func (v *__CreateArtifactInput) GetArtifactTypeName() string { return v.ArtifactTypeName }

// GetArtifactCollectionNames returns __CreateArtifactInput.ArtifactCollectionNames, and is useful for accessing the field via an interface.
func (v *__CreateArtifactInput) GetArtifactCollectionNames() []string {
	return v.ArtifactCollectionNames
}

// GetEntityName returns __CreateArtifactInput.EntityName, and is useful for accessing the field via an interface.
func (v *__CreateArtifactInput) GetEntityName() string { return v.EntityName }

// GetProjectName returns __CreateArtifactInput.ProjectName, and is useful for accessing the field via an interface.
func (v *__CreateArtifactInput) GetProjectName() string { return v.ProjectName }

// GetRunName returns __CreateArtifactInput.RunName, and is useful for accessing the field via an interface.
func (v *__CreateArtifactInput) GetRunName() *string { return v.RunName }

// GetDescription returns __CreateArtifactInput.Description, and is useful for accessing the field via an interface.
func (v *__CreateArtifactInput) GetDescription() *string { return v.Description }

// GetDigest returns __CreateArtifactInput.Digest, and is useful for accessing the field via an interface.
func (v *__CreateArtifactInput) GetDigest() string { return v.Digest }

// GetLabels returns __CreateArtifactInput.Labels, and is useful for accessing the field via an interface.
func (v *__CreateArtifactInput) GetLabels() *string { return v.Labels }

// GetAliases returns __CreateArtifactInput.Aliases, and is useful for accessing the field via an interface.
func (v *__CreateArtifactInput) GetAliases() []ArtifactAliasInput { return v.Aliases }

// GetMetadata returns __CreateArtifactInput.Metadata, and is useful for accessing the field via an interface.
func (v *__CreateArtifactInput) GetMetadata() *string { return v.Metadata }

// GetHistoryStep returns __CreateArtifactInput.HistoryStep, and is useful for accessing the field via an interface.
func (v *__CreateArtifactInput) GetHistoryStep() int { return v.HistoryStep }

// GetDistributedID returns __CreateArtifactInput.DistributedID, and is useful for accessing the field via an interface.
func (v *__CreateArtifactInput) GetDistributedID() *string { return v.DistributedID }

// GetClientID returns __CreateArtifactInput.ClientID, and is useful for accessing the field via an interface.
func (v *__CreateArtifactInput) GetClientID() string { return v.ClientID }

// GetSequenceClientID returns __CreateArtifactInput.SequenceClientID, and is useful for accessing the field via an interface.
func (v *__CreateArtifactInput) GetSequenceClientID() string { return v.SequenceClientID }

// GetEnableDigestDeduplication returns __CreateArtifactInput.EnableDigestDeduplication, and is useful for accessing the field via an interface.
func (v *__CreateArtifactInput) GetEnableDigestDeduplication() *bool {
	return v.EnableDigestDeduplication
}

// __CreateArtifactManifestInput is used internally by genqlient
type __CreateArtifactManifestInput struct {
	Name           string                `json:"name"`
	Digest         string                `json:"digest"`
	ArtifactID     string                `json:"artifactID"`
	BaseArtifactID *string               `json:"baseArtifactID"`
	EntityName     string                `json:"entityName"`
	ProjectName    string                `json:"projectName"`
	RunName        string                `json:"runName"`
	IncludeUpload  bool                  `json:"includeUpload"`
	TypeManifest   *ArtifactManifestType `json:"typeManifest"`
}

// GetName returns __CreateArtifactManifestInput.Name, and is useful for accessing the field via an interface.
func (v *__CreateArtifactManifestInput) GetName() string { return v.Name }

// GetDigest returns __CreateArtifactManifestInput.Digest, and is useful for accessing the field via an interface.
func (v *__CreateArtifactManifestInput) GetDigest() string { return v.Digest }

// GetArtifactID returns __CreateArtifactManifestInput.ArtifactID, and is useful for accessing the field via an interface.
func (v *__CreateArtifactManifestInput) GetArtifactID() string { return v.ArtifactID }

// GetBaseArtifactID returns __CreateArtifactManifestInput.BaseArtifactID, and is useful for accessing the field via an interface.
func (v *__CreateArtifactManifestInput) GetBaseArtifactID() *string { return v.BaseArtifactID }

// GetEntityName returns __CreateArtifactManifestInput.EntityName, and is useful for accessing the field via an interface.
func (v *__CreateArtifactManifestInput) GetEntityName() string { return v.EntityName }

// GetProjectName returns __CreateArtifactManifestInput.ProjectName, and is useful for accessing the field via an interface.
func (v *__CreateArtifactManifestInput) GetProjectName() string { return v.ProjectName }

// GetRunName returns __CreateArtifactManifestInput.RunName, and is useful for accessing the field via an interface.
func (v *__CreateArtifactManifestInput) GetRunName() string { return v.RunName }

// GetIncludeUpload returns __CreateArtifactManifestInput.IncludeUpload, and is useful for accessing the field via an interface.
func (v *__CreateArtifactManifestInput) GetIncludeUpload() bool { return v.IncludeUpload }

// GetTypeManifest returns __CreateArtifactManifestInput.TypeManifest, and is useful for accessing the field via an interface.
func (v *__CreateArtifactManifestInput) GetTypeManifest() *ArtifactManifestType {
	return v.TypeManifest
}

// __RunUploadUrlsInput is used internally by genqlient
type __RunUploadUrlsInput struct {
	Name        string    `json:"name"`
	Files       []*string `json:"files"`
	Entity      *string   `json:"entity"`
	Run         string    `json:"run"`
	Description *string   `json:"description"`
}

// GetName returns __RunUploadUrlsInput.Name, and is useful for accessing the field via an interface.
func (v *__RunUploadUrlsInput) GetName() string { return v.Name }

// GetFiles returns __RunUploadUrlsInput.Files, and is useful for accessing the field via an interface.
func (v *__RunUploadUrlsInput) GetFiles() []*string { return v.Files }

// GetEntity returns __RunUploadUrlsInput.Entity, and is useful for accessing the field via an interface.
func (v *__RunUploadUrlsInput) GetEntity() *string { return v.Entity }

// GetRun returns __RunUploadUrlsInput.Run, and is useful for accessing the field via an interface.
func (v *__RunUploadUrlsInput) GetRun() string { return v.Run }

// GetDescription returns __RunUploadUrlsInput.Description, and is useful for accessing the field via an interface.
func (v *__RunUploadUrlsInput) GetDescription() *string { return v.Description }

// __UpsertBucketInput is used internally by genqlient
type __UpsertBucketInput struct {
	Id             *string  `json:"id"`
	Name           *string  `json:"name"`
	Project        *string  `json:"project"`
	Entity         *string  `json:"entity"`
	GroupName      *string  `json:"groupName"`
	Description    *string  `json:"description"`
	DisplayName    *string  `json:"displayName"`
	Notes          *string  `json:"notes"`
	Commit         *string  `json:"commit"`
	Config         *string  `json:"config"`
	Host           *string  `json:"host"`
	Debug          *bool    `json:"debug"`
	Program        *string  `json:"program"`
	Repo           *string  `json:"repo"`
	JobType        *string  `json:"jobType"`
	State          *string  `json:"state"`
	Sweep          *string  `json:"sweep"`
	Tags           []string `json:"tags"`
	SummaryMetrics *string  `json:"summaryMetrics"`
}

// GetId returns __UpsertBucketInput.Id, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetId() *string { return v.Id }

// GetName returns __UpsertBucketInput.Name, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetName() *string { return v.Name }

// GetProject returns __UpsertBucketInput.Project, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetProject() *string { return v.Project }

// GetEntity returns __UpsertBucketInput.Entity, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetEntity() *string { return v.Entity }

// GetGroupName returns __UpsertBucketInput.GroupName, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetGroupName() *string { return v.GroupName }

// GetDescription returns __UpsertBucketInput.Description, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetDescription() *string { return v.Description }

// GetDisplayName returns __UpsertBucketInput.DisplayName, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetDisplayName() *string { return v.DisplayName }

// GetNotes returns __UpsertBucketInput.Notes, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetNotes() *string { return v.Notes }

// GetCommit returns __UpsertBucketInput.Commit, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetCommit() *string { return v.Commit }

// GetConfig returns __UpsertBucketInput.Config, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetConfig() *string { return v.Config }

// GetHost returns __UpsertBucketInput.Host, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetHost() *string { return v.Host }

// GetDebug returns __UpsertBucketInput.Debug, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetDebug() *bool { return v.Debug }

// GetProgram returns __UpsertBucketInput.Program, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetProgram() *string { return v.Program }

// GetRepo returns __UpsertBucketInput.Repo, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetRepo() *string { return v.Repo }

// GetJobType returns __UpsertBucketInput.JobType, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetJobType() *string { return v.JobType }

// GetState returns __UpsertBucketInput.State, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetState() *string { return v.State }

// GetSweep returns __UpsertBucketInput.Sweep, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetSweep() *string { return v.Sweep }

// GetTags returns __UpsertBucketInput.Tags, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetTags() []string { return v.Tags }

// GetSummaryMetrics returns __UpsertBucketInput.SummaryMetrics, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetSummaryMetrics() *string { return v.SummaryMetrics }

// The query or mutation executed by CommitArtifact.
const CommitArtifact_Operation = `
mutation CommitArtifact ($artifactID: ID!) {
	commitArtifact(input: {artifactID:$artifactID}) {
		artifact {
			id
			digest
		}
	}
}
`

func CommitArtifact(
	ctx context.Context,
	client graphql.Client,
	artifactID string,
) (*CommitArtifactResponse, error) {
	req := &graphql.Request{
		OpName: "CommitArtifact",
		Query:  CommitArtifact_Operation,
		Variables: &__CommitArtifactInput{
			ArtifactID: artifactID,
		},
	}
	var err error

	var data CommitArtifactResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateArtifact.
const CreateArtifact_Operation = `
mutation CreateArtifact ($artifactTypeName: String!, $artifactCollectionNames: [String!], $entityName: String!, $projectName: String!, $runName: String, $description: String, $digest: String!, $labels: JSONString, $aliases: [ArtifactAliasInput!], $metadata: JSONString, $historyStep: Int64!, $distributedID: String, $clientID: ID!, $sequenceClientID: ID!, $enableDigestDeduplication: Boolean) {
	createArtifact(input: {artifactTypeName:$artifactTypeName,artifactCollectionNames:$artifactCollectionNames,entityName:$entityName,projectName:$projectName,runName:$runName,description:$description,digest:$digest,digestAlgorithm:MANIFEST_MD5,labels:$labels,aliases:$aliases,metadata:$metadata,historyStep:$historyStep,distributedID:$distributedID,clientID:$clientID,sequenceClientID:$sequenceClientID,enableDigestDeduplication:$enableDigestDeduplication}) {
		artifact {
			id
			digest
			state
			aliases {
				artifactCollectionName
				alias
			}
			artifactSequence {
				id
				latestArtifact {
					id
					versionIndex
				}
			}
		}
	}
}
`

func CreateArtifact(
	ctx context.Context,
	client graphql.Client,
	artifactTypeName string,
	artifactCollectionNames []string,
	entityName string,
	projectName string,
	runName *string,
	description *string,
	digest string,
	labels *string,
	aliases []ArtifactAliasInput,
	metadata *string,
	historyStep int,
	distributedID *string,
	clientID string,
	sequenceClientID string,
	enableDigestDeduplication *bool,
) (*CreateArtifactResponse, error) {
	req := &graphql.Request{
		OpName: "CreateArtifact",
		Query:  CreateArtifact_Operation,
		Variables: &__CreateArtifactInput{
			ArtifactTypeName:          artifactTypeName,
			ArtifactCollectionNames:   artifactCollectionNames,
			EntityName:                entityName,
			ProjectName:               projectName,
			RunName:                   runName,
			Description:               description,
			Digest:                    digest,
			Labels:                    labels,
			Aliases:                   aliases,
			Metadata:                  metadata,
			HistoryStep:               historyStep,
			DistributedID:             distributedID,
			ClientID:                  clientID,
			SequenceClientID:          sequenceClientID,
			EnableDigestDeduplication: enableDigestDeduplication,
		},
	}
	var err error

	var data CreateArtifactResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateArtifactFiles.
const CreateArtifactFiles_Operation = `
mutation CreateArtifactFiles ($storageLayout: ArtifactStorageLayout!, $artifactFiles: [CreateArtifactFileSpecInput!]!) {
	createArtifactFiles(input: {artifactFiles:$artifactFiles,storageLayout:$storageLayout}) {
		files {
			edges {
				node {
					id
					name
					displayName
					uploadUrl
					uploadHeaders
					artifact {
						id
					}
				}
			}
		}
	}
}
`

func CreateArtifactFiles(
	ctx context.Context,
	client graphql.Client,
	storageLayout ArtifactStorageLayout,
	artifactFiles []CreateArtifactFileSpecInput,
) (*CreateArtifactFilesResponse, error) {
	req := &graphql.Request{
		OpName: "CreateArtifactFiles",
		Query:  CreateArtifactFiles_Operation,
		Variables: &__CreateArtifactFilesInput{
			StorageLayout: storageLayout,
			ArtifactFiles: artifactFiles,
		},
	}
	var err error

	var data CreateArtifactFilesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateArtifactManifest.
const CreateArtifactManifest_Operation = `
mutation CreateArtifactManifest ($name: String!, $digest: String!, $artifactID: ID!, $baseArtifactID: ID, $entityName: String!, $projectName: String!, $runName: String!, $includeUpload: Boolean!, $typeManifest: ArtifactManifestType = FULL) {
	createArtifactManifest(input: {name:$name,digest:$digest,artifactID:$artifactID,baseArtifactID:$baseArtifactID,entityName:$entityName,projectName:$projectName,runName:$runName,type:$typeManifest}) {
		artifactManifest {
			id
			file {
				id
				name
				displayName
				uploadUrl @include(if: $includeUpload)
				uploadHeaders @include(if: $includeUpload)
			}
		}
	}
}
`

func CreateArtifactManifest(
	ctx context.Context,
	client graphql.Client,
	name string,
	digest string,
	artifactID string,
	baseArtifactID *string,
	entityName string,
	projectName string,
	runName string,
	includeUpload bool,
	typeManifest *ArtifactManifestType,
) (*CreateArtifactManifestResponse, error) {
	req := &graphql.Request{
		OpName: "CreateArtifactManifest",
		Query:  CreateArtifactManifest_Operation,
		Variables: &__CreateArtifactManifestInput{
			Name:           name,
			Digest:         digest,
			ArtifactID:     artifactID,
			BaseArtifactID: baseArtifactID,
			EntityName:     entityName,
			ProjectName:    projectName,
			RunName:        runName,
			IncludeUpload:  includeUpload,
			TypeManifest:   typeManifest,
		},
	}
	var err error

	var data CreateArtifactManifestResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by RunUploadUrls.
const RunUploadUrls_Operation = `
query RunUploadUrls ($name: String!, $files: [String]!, $entity: String, $run: String!, $description: String) {
	model(name: $name, entityName: $entity) {
		bucket(name: $run, desc: $description) {
			id
			files(names: $files) {
				uploadHeaders
				edges {
					node {
						name
						url(upload: true)
						updatedAt
					}
				}
			}
		}
	}
}
`

func RunUploadUrls(
	ctx context.Context,
	client graphql.Client,
	name string,
	files []*string,
	entity *string,
	run string,
	description *string,
) (*RunUploadUrlsResponse, error) {
	req := &graphql.Request{
		OpName: "RunUploadUrls",
		Query:  RunUploadUrls_Operation,
		Variables: &__RunUploadUrlsInput{
			Name:        name,
			Files:       files,
			Entity:      entity,
			Run:         run,
			Description: description,
		},
	}
	var err error

	var data RunUploadUrlsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpsertBucket.
const UpsertBucket_Operation = `
mutation UpsertBucket ($id: String, $name: String, $project: String, $entity: String, $groupName: String, $description: String, $displayName: String, $notes: String, $commit: String, $config: JSONString, $host: String, $debug: Boolean, $program: String, $repo: String, $jobType: String, $state: String, $sweep: String, $tags: [String!], $summaryMetrics: JSONString) {
	upsertBucket(input: {id:$id,name:$name,groupName:$groupName,modelName:$project,entityName:$entity,description:$description,displayName:$displayName,notes:$notes,config:$config,commit:$commit,host:$host,debug:$debug,jobProgram:$program,jobRepo:$repo,jobType:$jobType,state:$state,sweep:$sweep,tags:$tags,summaryMetrics:$summaryMetrics}) {
		bucket {
			id
			name
			displayName
			description
			config
			sweepName
			project {
				id
				name
				entity {
					id
					name
				}
			}
		}
		inserted
	}
}
`

func UpsertBucket(
	ctx context.Context,
	client graphql.Client,
	id *string,
	name *string,
	project *string,
	entity *string,
	groupName *string,
	description *string,
	displayName *string,
	notes *string,
	commit *string,
	config *string,
	host *string,
	debug *bool,
	program *string,
	repo *string,
	jobType *string,
	state *string,
	sweep *string,
	tags []string,
	summaryMetrics *string,
) (*UpsertBucketResponse, error) {
	req := &graphql.Request{
		OpName: "UpsertBucket",
		Query:  UpsertBucket_Operation,
		Variables: &__UpsertBucketInput{
			Id:             id,
			Name:           name,
			Project:        project,
			Entity:         entity,
			GroupName:      groupName,
			Description:    description,
			DisplayName:    displayName,
			Notes:          notes,
			Commit:         commit,
			Config:         config,
			Host:           host,
			Debug:          debug,
			Program:        program,
			Repo:           repo,
			JobType:        jobType,
			State:          state,
			Sweep:          sweep,
			Tags:           tags,
			SummaryMetrics: summaryMetrics,
		},
	}
	var err error

	var data UpsertBucketResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by Viewer.
const Viewer_Operation = `
query Viewer {
	viewer {
		id
		entity
		flags
		teams {
			edges {
				node {
					name
				}
			}
		}
	}
}
`

func Viewer(
	ctx context.Context,
	client graphql.Client,
) (*ViewerResponse, error) {
	req := &graphql.Request{
		OpName: "Viewer",
		Query:  Viewer_Operation,
	}
	var err error

	var data ViewerResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
