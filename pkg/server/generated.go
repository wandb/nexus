// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package server

import (
	"context"
	"time"

	"github.com/Khan/genqlient/graphql"
)

// RunUploadUrlsModelProject includes the requested fields of the GraphQL type Project.
type RunUploadUrlsModelProject struct {
	Bucket *RunUploadUrlsModelProjectBucketRun `json:"bucket"`
}

// GetBucket returns RunUploadUrlsModelProject.Bucket, and is useful for accessing the field via an interface.
func (v *RunUploadUrlsModelProject) GetBucket() *RunUploadUrlsModelProjectBucketRun { return v.Bucket }

// RunUploadUrlsModelProjectBucketRun includes the requested fields of the GraphQL type Run.
type RunUploadUrlsModelProjectBucketRun struct {
	Id    string                                                 `json:"id"`
	Files *RunUploadUrlsModelProjectBucketRunFilesFileConnection `json:"files"`
}

// GetId returns RunUploadUrlsModelProjectBucketRun.Id, and is useful for accessing the field via an interface.
func (v *RunUploadUrlsModelProjectBucketRun) GetId() string { return v.Id }

// GetFiles returns RunUploadUrlsModelProjectBucketRun.Files, and is useful for accessing the field via an interface.
func (v *RunUploadUrlsModelProjectBucketRun) GetFiles() *RunUploadUrlsModelProjectBucketRunFilesFileConnection {
	return v.Files
}

// RunUploadUrlsModelProjectBucketRunFilesFileConnection includes the requested fields of the GraphQL type FileConnection.
type RunUploadUrlsModelProjectBucketRunFilesFileConnection struct {
	UploadHeaders []string                                                             `json:"uploadHeaders"`
	Edges         []RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdge `json:"edges"`
}

// GetUploadHeaders returns RunUploadUrlsModelProjectBucketRunFilesFileConnection.UploadHeaders, and is useful for accessing the field via an interface.
func (v *RunUploadUrlsModelProjectBucketRunFilesFileConnection) GetUploadHeaders() []string {
	return v.UploadHeaders
}

// GetEdges returns RunUploadUrlsModelProjectBucketRunFilesFileConnection.Edges, and is useful for accessing the field via an interface.
func (v *RunUploadUrlsModelProjectBucketRunFilesFileConnection) GetEdges() []RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdge {
	return v.Edges
}

// RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdge includes the requested fields of the GraphQL type FileEdge.
type RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdge struct {
	Node *RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdgeNodeFile `json:"node"`
}

// GetNode returns RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdge.Node, and is useful for accessing the field via an interface.
func (v *RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdge) GetNode() *RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdgeNodeFile {
	return v.Node
}

// RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdgeNodeFile includes the requested fields of the GraphQL type File.
type RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdgeNodeFile struct {
	Name      string     `json:"name"`
	Url       *string    `json:"url"`
	UpdatedAt *time.Time `json:"updatedAt"`
}

// GetName returns RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdgeNodeFile.Name, and is useful for accessing the field via an interface.
func (v *RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdgeNodeFile) GetName() string {
	return v.Name
}

// GetUrl returns RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdgeNodeFile.Url, and is useful for accessing the field via an interface.
func (v *RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdgeNodeFile) GetUrl() *string {
	return v.Url
}

// GetUpdatedAt returns RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdgeNodeFile.UpdatedAt, and is useful for accessing the field via an interface.
func (v *RunUploadUrlsModelProjectBucketRunFilesFileConnectionEdgesFileEdgeNodeFile) GetUpdatedAt() *time.Time {
	return v.UpdatedAt
}

// RunUploadUrlsResponse is returned by RunUploadUrls on success.
type RunUploadUrlsResponse struct {
	Model *RunUploadUrlsModelProject `json:"model"`
}

// GetModel returns RunUploadUrlsResponse.Model, and is useful for accessing the field via an interface.
func (v *RunUploadUrlsResponse) GetModel() *RunUploadUrlsModelProject { return v.Model }

// UpsertBucketResponse is returned by UpsertBucket on success.
type UpsertBucketResponse struct {
	UpsertBucket *UpsertBucketUpsertBucketUpsertBucketPayload `json:"upsertBucket"`
}

// GetUpsertBucket returns UpsertBucketResponse.UpsertBucket, and is useful for accessing the field via an interface.
func (v *UpsertBucketResponse) GetUpsertBucket() *UpsertBucketUpsertBucketUpsertBucketPayload {
	return v.UpsertBucket
}

// UpsertBucketUpsertBucketUpsertBucketPayload includes the requested fields of the GraphQL type UpsertBucketPayload.
type UpsertBucketUpsertBucketUpsertBucketPayload struct {
	Bucket   *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun `json:"bucket"`
	Inserted *bool                                                 `json:"inserted"`
}

// GetBucket returns UpsertBucketUpsertBucketUpsertBucketPayload.Bucket, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayload) GetBucket() *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun {
	return v.Bucket
}

// GetInserted returns UpsertBucketUpsertBucketUpsertBucketPayload.Inserted, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayload) GetInserted() *bool { return v.Inserted }

// UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun includes the requested fields of the GraphQL type Run.
type UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun struct {
	Id          string                                                       `json:"id"`
	Name        string                                                       `json:"name"`
	DisplayName *string                                                      `json:"displayName"`
	Description *string                                                      `json:"description"`
	Config      *string                                                      `json:"config"`
	SweepName   *string                                                      `json:"sweepName"`
	Project     *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProject `json:"project"`
}

// GetId returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun.Id, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun) GetId() string { return v.Id }

// GetName returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun.Name, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun) GetName() string { return v.Name }

// GetDisplayName returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun.DisplayName, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun) GetDisplayName() *string {
	return v.DisplayName
}

// GetDescription returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun.Description, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun) GetDescription() *string {
	return v.Description
}

// GetConfig returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun.Config, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun) GetConfig() *string { return v.Config }

// GetSweepName returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun.SweepName, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun) GetSweepName() *string {
	return v.SweepName
}

// GetProject returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun.Project, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRun) GetProject() *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProject {
	return v.Project
}

// UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProject includes the requested fields of the GraphQL type Project.
type UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProject struct {
	Id     string                                                            `json:"id"`
	Name   string                                                            `json:"name"`
	Entity UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProjectEntity `json:"entity"`
}

// GetId returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProject.Id, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProject) GetId() string { return v.Id }

// GetName returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProject.Name, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProject) GetName() string { return v.Name }

// GetEntity returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProject.Entity, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProject) GetEntity() UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProjectEntity {
	return v.Entity
}

// UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProjectEntity includes the requested fields of the GraphQL type Entity.
type UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProjectEntity struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProjectEntity.Id, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProjectEntity) GetId() string {
	return v.Id
}

// GetName returns UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProjectEntity.Name, and is useful for accessing the field via an interface.
func (v *UpsertBucketUpsertBucketUpsertBucketPayloadBucketRunProjectEntity) GetName() string {
	return v.Name
}

// ViewerResponse is returned by Viewer on success.
type ViewerResponse struct {
	Viewer *ViewerViewerUser `json:"viewer"`
}

// GetViewer returns ViewerResponse.Viewer, and is useful for accessing the field via an interface.
func (v *ViewerResponse) GetViewer() *ViewerViewerUser { return v.Viewer }

// ViewerViewerUser includes the requested fields of the GraphQL type User.
type ViewerViewerUser struct {
	Id     string                                 `json:"id"`
	Entity *string                                `json:"entity"`
	Flags  *string                                `json:"flags"`
	Teams  *ViewerViewerUserTeamsEntityConnection `json:"teams"`
}

// GetId returns ViewerViewerUser.Id, and is useful for accessing the field via an interface.
func (v *ViewerViewerUser) GetId() string { return v.Id }

// GetEntity returns ViewerViewerUser.Entity, and is useful for accessing the field via an interface.
func (v *ViewerViewerUser) GetEntity() *string { return v.Entity }

// GetFlags returns ViewerViewerUser.Flags, and is useful for accessing the field via an interface.
func (v *ViewerViewerUser) GetFlags() *string { return v.Flags }

// GetTeams returns ViewerViewerUser.Teams, and is useful for accessing the field via an interface.
func (v *ViewerViewerUser) GetTeams() *ViewerViewerUserTeamsEntityConnection { return v.Teams }

// ViewerViewerUserTeamsEntityConnection includes the requested fields of the GraphQL type EntityConnection.
type ViewerViewerUserTeamsEntityConnection struct {
	Edges []ViewerViewerUserTeamsEntityConnectionEdgesEntityEdge `json:"edges"`
}

// GetEdges returns ViewerViewerUserTeamsEntityConnection.Edges, and is useful for accessing the field via an interface.
func (v *ViewerViewerUserTeamsEntityConnection) GetEdges() []ViewerViewerUserTeamsEntityConnectionEdgesEntityEdge {
	return v.Edges
}

// ViewerViewerUserTeamsEntityConnectionEdgesEntityEdge includes the requested fields of the GraphQL type EntityEdge.
type ViewerViewerUserTeamsEntityConnectionEdgesEntityEdge struct {
	Node *ViewerViewerUserTeamsEntityConnectionEdgesEntityEdgeNodeEntity `json:"node"`
}

// GetNode returns ViewerViewerUserTeamsEntityConnectionEdgesEntityEdge.Node, and is useful for accessing the field via an interface.
func (v *ViewerViewerUserTeamsEntityConnectionEdgesEntityEdge) GetNode() *ViewerViewerUserTeamsEntityConnectionEdgesEntityEdgeNodeEntity {
	return v.Node
}

// ViewerViewerUserTeamsEntityConnectionEdgesEntityEdgeNodeEntity includes the requested fields of the GraphQL type Entity.
type ViewerViewerUserTeamsEntityConnectionEdgesEntityEdgeNodeEntity struct {
	Name string `json:"name"`
}

// GetName returns ViewerViewerUserTeamsEntityConnectionEdgesEntityEdgeNodeEntity.Name, and is useful for accessing the field via an interface.
func (v *ViewerViewerUserTeamsEntityConnectionEdgesEntityEdgeNodeEntity) GetName() string {
	return v.Name
}

// __RunUploadUrlsInput is used internally by genqlient
type __RunUploadUrlsInput struct {
	Name        string    `json:"name"`
	Files       []*string `json:"files"`
	Entity      *string   `json:"entity"`
	Run         string    `json:"run"`
	Description *string   `json:"description"`
}

// GetName returns __RunUploadUrlsInput.Name, and is useful for accessing the field via an interface.
func (v *__RunUploadUrlsInput) GetName() string { return v.Name }

// GetFiles returns __RunUploadUrlsInput.Files, and is useful for accessing the field via an interface.
func (v *__RunUploadUrlsInput) GetFiles() []*string { return v.Files }

// GetEntity returns __RunUploadUrlsInput.Entity, and is useful for accessing the field via an interface.
func (v *__RunUploadUrlsInput) GetEntity() *string { return v.Entity }

// GetRun returns __RunUploadUrlsInput.Run, and is useful for accessing the field via an interface.
func (v *__RunUploadUrlsInput) GetRun() string { return v.Run }

// GetDescription returns __RunUploadUrlsInput.Description, and is useful for accessing the field via an interface.
func (v *__RunUploadUrlsInput) GetDescription() *string { return v.Description }

// __UpsertBucketInput is used internally by genqlient
type __UpsertBucketInput struct {
	Id             *string  `json:"id"`
	Name           *string  `json:"name"`
	Project        *string  `json:"project"`
	Entity         *string  `json:"entity"`
	GroupName      *string  `json:"groupName"`
	Description    *string  `json:"description"`
	DisplayName    *string  `json:"displayName"`
	Notes          *string  `json:"notes"`
	Commit         *string  `json:"commit"`
	Config         *string  `json:"config"`
	Host           *string  `json:"host"`
	Debug          *bool    `json:"debug"`
	Program        *string  `json:"program"`
	Repo           *string  `json:"repo"`
	JobType        *string  `json:"jobType"`
	State          *string  `json:"state"`
	Sweep          *string  `json:"sweep"`
	Tags           []string `json:"tags"`
	SummaryMetrics *string  `json:"summaryMetrics"`
}

// GetId returns __UpsertBucketInput.Id, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetId() *string { return v.Id }

// GetName returns __UpsertBucketInput.Name, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetName() *string { return v.Name }

// GetProject returns __UpsertBucketInput.Project, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetProject() *string { return v.Project }

// GetEntity returns __UpsertBucketInput.Entity, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetEntity() *string { return v.Entity }

// GetGroupName returns __UpsertBucketInput.GroupName, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetGroupName() *string { return v.GroupName }

// GetDescription returns __UpsertBucketInput.Description, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetDescription() *string { return v.Description }

// GetDisplayName returns __UpsertBucketInput.DisplayName, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetDisplayName() *string { return v.DisplayName }

// GetNotes returns __UpsertBucketInput.Notes, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetNotes() *string { return v.Notes }

// GetCommit returns __UpsertBucketInput.Commit, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetCommit() *string { return v.Commit }

// GetConfig returns __UpsertBucketInput.Config, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetConfig() *string { return v.Config }

// GetHost returns __UpsertBucketInput.Host, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetHost() *string { return v.Host }

// GetDebug returns __UpsertBucketInput.Debug, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetDebug() *bool { return v.Debug }

// GetProgram returns __UpsertBucketInput.Program, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetProgram() *string { return v.Program }

// GetRepo returns __UpsertBucketInput.Repo, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetRepo() *string { return v.Repo }

// GetJobType returns __UpsertBucketInput.JobType, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetJobType() *string { return v.JobType }

// GetState returns __UpsertBucketInput.State, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetState() *string { return v.State }

// GetSweep returns __UpsertBucketInput.Sweep, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetSweep() *string { return v.Sweep }

// GetTags returns __UpsertBucketInput.Tags, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetTags() []string { return v.Tags }

// GetSummaryMetrics returns __UpsertBucketInput.SummaryMetrics, and is useful for accessing the field via an interface.
func (v *__UpsertBucketInput) GetSummaryMetrics() *string { return v.SummaryMetrics }

// UploadUrls
func RunUploadUrls(
	ctx context.Context,
	client graphql.Client,
	name string,
	files []*string,
	entity *string,
	run string,
	description *string,
) (*RunUploadUrlsResponse, error) {
	req := &graphql.Request{
		OpName: "RunUploadUrls",
		Query: `
query RunUploadUrls ($name: String!, $files: [String]!, $entity: String, $run: String!, $description: String) {
	model(name: $name, entityName: $entity) {
		bucket(name: $run, desc: $description) {
			id
			files(names: $files) {
				uploadHeaders
				edges {
					node {
						name
						url(upload: true)
						updatedAt
					}
				}
			}
		}
	}
}
`,
		Variables: &__RunUploadUrlsInput{
			Name:        name,
			Files:       files,
			Entity:      entity,
			Run:         run,
			Description: description,
		},
	}
	var err error

	var data RunUploadUrlsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// Run
func UpsertBucket(
	ctx context.Context,
	client graphql.Client,
	id *string,
	name *string,
	project *string,
	entity *string,
	groupName *string,
	description *string,
	displayName *string,
	notes *string,
	commit *string,
	config *string,
	host *string,
	debug *bool,
	program *string,
	repo *string,
	jobType *string,
	state *string,
	sweep *string,
	tags []string,
	summaryMetrics *string,
) (*UpsertBucketResponse, error) {
	req := &graphql.Request{
		OpName: "UpsertBucket",
		Query: `
mutation UpsertBucket ($id: String, $name: String, $project: String, $entity: String, $groupName: String, $description: String, $displayName: String, $notes: String, $commit: String, $config: JSONString, $host: String, $debug: Boolean, $program: String, $repo: String, $jobType: String, $state: String, $sweep: String, $tags: [String!], $summaryMetrics: JSONString) {
	upsertBucket(input: {id:$id,name:$name,groupName:$groupName,modelName:$project,entityName:$entity,description:$description,displayName:$displayName,notes:$notes,config:$config,commit:$commit,host:$host,debug:$debug,jobProgram:$program,jobRepo:$repo,jobType:$jobType,state:$state,sweep:$sweep,tags:$tags,summaryMetrics:$summaryMetrics}) {
		bucket {
			id
			name
			displayName
			description
			config
			sweepName
			project {
				id
				name
				entity {
					id
					name
				}
			}
		}
		inserted
	}
}
`,
		Variables: &__UpsertBucketInput{
			Id:             id,
			Name:           name,
			Project:        project,
			Entity:         entity,
			GroupName:      groupName,
			Description:    description,
			DisplayName:    displayName,
			Notes:          notes,
			Commit:         commit,
			Config:         config,
			Host:           host,
			Debug:          debug,
			Program:        program,
			Repo:           repo,
			JobType:        jobType,
			State:          state,
			Sweep:          sweep,
			Tags:           tags,
			SummaryMetrics: summaryMetrics,
		},
	}
	var err error

	var data UpsertBucketResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// Viewer
func Viewer(
	ctx context.Context,
	client graphql.Client,
) (*ViewerResponse, error) {
	req := &graphql.Request{
		OpName: "Viewer",
		Query: `
query Viewer {
	viewer {
		id
		entity
		flags
		teams {
			edges {
				node {
					name
				}
			}
		}
	}
}
`,
	}
	var err error

	var data ViewerResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
